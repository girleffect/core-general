version: '3'

# IPs
# ----------
# 172.18.0.2  core-access-control
# 172.18.0.3  core-authentication-service
# 172.18.0.4  wagtail-demo-1
# 172.18.0.5  wagtail-demo-2
# 172.18.0.6  core-management-layer
# 172.18.0.7  core-management-portal
# 172.18.0.8  core-user-data-store
# -----------
# 172.18.0.10 db
# 172.18.0.11 redis
# 172.18.0.12 memcache
#
# Local ports
# -----------
# 10000 core-access-control
# 10001 wagtail-demo-1
# 10002 wagtail-demo-2
# 10003 core-management-layer
# 10004 core-management-portal

services:

  core-user-data-store:
    build:
      context: ../core-user-data-store/
    environment:
      - DB_URI=postgresql+psycopg2://user_data_store:password@db:5432/user_data_store
    volumes:
      - ../core-user-data-store/:/app/
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:5000"]
#      interval: 1m30s
#      timeout: 10s
#      retries: 3
    ulimits:
       nproc: 65535
       nofile:
         soft: 20000
         hard: 40000
    restart: on-failure
    # command: /code/prism run --validate --debug --list --mockDynamic -s /code/swagger/user_data_store.yml -p 5000
    command: -m swagger_server
    depends_on:
      - db
    networks:
      oidcnetwork:
        ipv4_address: 172.18.0.8

  core-access-control:
    build:
      context: ../core-access-control/
    environment:
      - DB_URI=postgresql+psycopg2://access_control:password@db:5432/access_control
    volumes:
      - ../core-access-control/:/app/
    restart: on-failure
    # command: /code/prism run --validate --debug --list --mockDynamic -s /code/swagger/access_control.yml -p 5000
    command: -m swagger_server
    depends_on:
      - db
    networks:
      oidcnetwork:
        ipv4_address: 172.18.0.2

  core-authentication-service:
    image: ge-auth:0.1
    build:
      context: ../core-authentication-service/
    volumes:
      - ../core-authentication-service/:/app/
    command: scripts/waitFor.sh scripts/startDjango.sh
    ports:
      - "10000:8000"
    environment:
      - DB_HOST=db
      - REDIS_URI=redis://redis:6379/0
      # NOTE: we bootstrap our database container with some dbs.
      - DB_NAME=authentication_service
      - ALLOWED_HOSTS=*
      - WAGTAIL_1_IP=http://172.18.0.4:8000/oidc/callback/
      - WAGTAIL_2_IP=http://172.18.0.5:8000/oidc/callback/
    depends_on:
      - db
    networks:
      oidcnetwork:
        ipv4_address: 172.18.0.3

  wagtail-demo-1:
    image: wtd_1:0.1
    build:
      context: ../core-integration-demo/
    command: scripts/waitFor.sh scripts/startDjango.sh
    ports:
      - "10001:8000"
    environment:
      # Not current on postgres.
      - DB_HOST=db
      - DB_NAME=wagtail_1
      - DB_USER=wagtail_1
      - DB_PASSWORD=password
      - WAGTAIL_SITE_NAME="Blue Wagtail"
      - WAGTAIL_SITE_COLOUR=blue
      - WAGTAIL_REDIRECT_URL=http://172.18.0.4/
      - OIDC_RP_CLIENT_ID=client_id_1
      - OIDC_RP_CLIENT_SECRET=super_client_secret_1
      - OIDC_OP=http://172.18.0.3:8000
      - OIDC_OP_AUTHORIZATION_ENDPOINT=http://172.18.0.3:8000/openid/authorize/
      - OIDC_OP_TOKEN_ENDPOINT=http://172.18.0.3:8000/openid/token/
      - OIDC_OP_USER_ENDPOINT=http://172.18.0.3:8000/openid/userinfo/
    depends_on:
      - db
      - core-authentication-service
    volumes:
        - "../core-integration-demo/:/app/"
    networks:
      oidcnetwork:
        ipv4_address: 172.18.0.4

  wagtail-demo-2:
    image: wtd_2:0.1
    build:
      context: ../core-integration-demo/
    command: scripts/waitFor.sh scripts/startDjango.sh
    ports:
      - "10002:8000"
    environment:
      # Not current on postgres.
      - DB_HOST=db
      - DB_NAME=wagtail_2
      - DB_USER=wagtail_2
      - DB_PASSWORD=password
      - WAGTAIL_SITE_NAME="Green Wagtail"
      - WAGTAIL_SITE_COLOUR=green
      - WAGTAIL_REDIRECT_URL=http://172.18.0.5/
      - OIDC_RP_CLIENT_ID=client_id_2
      - OIDC_RP_CLIENT_SECRET=super_client_secret_2
      - OIDC_OP=http://172.18.0.3:8000
      - OIDC_OP_AUTHORIZATION_ENDPOINT=http://172.18.0.3:8000/openid/authorize/
      - OIDC_OP_TOKEN_ENDPOINT=http://172.18.0.3:8000/openid/token/
      - OIDC_OP_USER_ENDPOINT=http://172.18.0.3:8000/openid/userinfo/
    depends_on:
      - db
      - core-authentication-service
    volumes:
        - "../core-integration-demo/:/app/"
    networks:
      oidcnetwork:
        ipv4_address: 172.18.0.5

  core-management-layer:
    build:
      context: ../core-management-layer/
    volumes:
      - ../core-management-layer/:/app/
    ports:
      - "10003:5000"
    depends_on:
      - core-access-control
      - core-user-data-store
      - core-authentication-service
    restart: on-failure
    # For mocking:
    # command: /code/prism run --validate --debug --list --mockDynamic -s /code/swagger/management_layer.yml -p 8080
    command: swagger_server/httpd.py --logging=debug
    networks:
      oidcnetwork:
        ipv4_address: 172.18.0.6

  core-management-portal:
    image: ge-gmp:0.1
    build:
      context: ../core-management-portal/
    command: yarn start
    ports:
      - "10004:3000"
    environment:
      - OIDC_RP_CLIENT_ID=client_id_2
      - OIDC_RP_CLIENT_SECRET=super_client_secret_2
      - OIDC_OP_AUTHORIZATION_ENDPOINT=http://172.18.0.3:8000/openid/authorize/
      - OIDC_OP_TOKEN_ENDPOINT=http://172.18.0.3:8000/openid/token/
      - OIDC_OP_USER_ENDPOINT=http://172.18.0.3:8000/openid/userinfo/
    depends_on:
      - core-authentication-service
    volumes:
        - "../core-management-portal/:/app/"
    networks:
      oidcnetwork:
        ipv4_address: 172.18.0.7

  db:
    build:
      context: apps/database/
    # To rather mount localhost postgres data.
    #volumes:
    #    - "/var/lib/postgresql/data:/var/lib/postgresql/data"
    networks:
      oidcnetwork:
        ipv4_address: 172.18.0.10

  redis:
    image: "redis:alpine"
    expose:
      - "6379"
    networks:
      oidcnetwork:
        ipv4_address: 172.18.0.11

  memcache:
    image: "memcached:alpine"
    networks:
      oidcnetwork:
        ipv4_address: 172.18.0.12

networks:
  oidcnetwork:
    external: true

